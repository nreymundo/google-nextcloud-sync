[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "g2nc"
version = "0.1.0"
description = "Google → Nextcloud one-way incremental sync for Contacts (CardDAV) and Calendar (CalDAV)"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Google→Nextcloud Sync Maintainers" }]
keywords = ["nextcloud", "carddav", "caldav", "google", "contacts", "calendar", "sync"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]
dependencies = [
  "typer>=0.12.0",
  "httpx>=0.27.0",
  "pydantic>=2.8.0",
  "pydantic-settings>=2.3.0",
  "PyYAML>=6.0.1",
  "google-api-python-client>=2.131.0",
  "google-auth>=2.32.0",
  "google-auth-oauthlib>=1.2.0",
  "vobject>=0.9.7",
  "icalendar>=5.0.13",
  "caldav>=1.3.9",
  "python-dateutil>=2.9.0.post0",
  "tzdata>=2024.1"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2.0",
  "pytest-cov>=5.0.0",
  "vcrpy>=6.0.1",
  "responses>=0.25.2",
  "mypy>=1.10.0",
  "ruff>=0.6.8",
  "black>=24.8.0",
  "pre-commit>=3.8.0",
  "commitizen>=3.27.0",
  "types-requests>=2.32.0.20240712",
  "types-python-dateutil>=2.9.0.20240316",
]
all = ["g2nc[dev]"]

[project.scripts]
g2nc = "g2nc.cli:app"

[project.urls]
Homepage = "https://github.com/yourorg/g2nc"
Documentation = "https://github.com/yourorg/g2nc#readme"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"g2nc" = []

[tool.setuptools.packages.find]
where = ["src"]
include = ["g2nc*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q --cov=src --cov-report=term-missing"
testpaths = ["tests"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100
force_single_line = false
combine_as_imports = true
known_first_party = ["g2nc"]

[tool.ruff]
line-length = 100
target-version = "py312"
fix = true

[tool.ruff.lint]
select = ["E","F","I","B","UP","PL","RUF"]
ignore = ["E203","E501","B008","PLR0913","PLR0912","PLR0915","PLR2004","PLC0415","E402"]  # project compatibility and Typer/web imports

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["PLR2004"]  # allow magic numbers in tests

[tool.mypy]
python_version = "3.12"
strict = true
# Relax noisy checks for this phase; we still type most internal code strictly.
warn_unused_ignores = false
warn_return_any = true
disallow_untyped_defs = true
no_implicit_optional = true
ignore_missing_imports = true
allow_redefinition = true
disable_error_code = ["misc","no-any-return","import-untyped"]
# Enable Pydantic plugin so BaseModel defaults are understood by mypy
plugins = ["pydantic.mypy"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version = "0.1.0"
version_files = ["src/g2nc/__init__.py:__version__"]
